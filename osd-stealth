#!/usr/bin/bash

originalfile='/usr/share/plasma/look-and-feel/org.kde.breeze.desktop/contents/osd/Osd.qml'

NEWCODE='/* THIS IS A MODIFIED VERSION
 *
 * Copyright 2014 Martin Klapetek <mklapetek@kde.org>
 * Copyright 2014 Martin Klapetek <mklapetek@kde.org> (Original)
 * Copyright 2019 Koneko-Nyaa (Changes)
 * Thanks to Chris Holland <zrenfire@gmail.com> for inspiration.
 * Copyright 2019 OnikenX (Changes) <onikenx@pm.me>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import QtQuick 2.0
import QtQuick.Window 2.2
import org.kde.plasma.core 2.0 as PlasmaCore
import org.kde.plasma.components 2.0 as PlasmaComponents
import org.kde.plasma.extras 2.0 as PlasmaExtra

PlasmaCore.Dialog {
    id: root
    location: PlasmaCore.Types.Floating
    type: PlasmaCore.Dialog.OnScreenDisplay
    outputOnly: true

 // The X11BypassWindowManagerHint flag stops KWin from forcibly re-centering the OSD.
    flags: Qt.X11BypassWindowManagerHint | Qt.FramelessWindowHint
    
    //Position of where it should be
    property int xPos: Math.round(Screen.width * 0.03)
    property int yPos: Screen.height - Math.round(Screen.height* 0.1)
    x: xPos
    y: yPos

    // OSD Timeout in msecs - how long it will stay on the screen
    property int timeout: 800
    // This is either a text or a number, if showingProgress is set to true,
    // the number will be used as a value for the progress bar
    property var osdValue
    // Maximum percent value
    property int osdMaxValue: 100
    // Icon name to display
    property string icon
    // Set to true if the value is meant for progress bar,
    // false for displaying the value as normal text
    property bool showingProgress: false

    mainItem: OsdItem {
        rootItem: root
    }
}
'
function exit_issue(){
  echo Please make an issue in https://github.com/OnikenX/KDE-OSD-stealth/issues 
  exit $1
}

if test -f originalfile
then 
  echo There is no file to override.
  exit_issue 4
fi

function restorechanges {
  if test -f $originalfile.bck > /dev/null
  then
    sudo mv $originalfile.bck $originalfile
  else
    echo Backup does not exist
    exit_issue 2
  fi
}

function backup(){
  if ! printf $NEWCODE | diff -q - $originalfile > /dev/null
  then
    sudo cp $originalfile $originalfile.bck
  fi
}

function applychanges(){
    backup
    bash -c "printf \"$NEWCODE\" > $originalfile" 
}

#restartshell.sh
function restartshell(){
    kquitapp5 plasmashell 2> /dev/null && kstart5 plasmashell 2> /dev/null
}

function usage {
        echo "Usage: $(basename $0) [-harb BACKUP_FOLDER]" 2>&1
        echo '   -h   shows this message'
        echo '   -a   applies the change to the couner'
        echo '   -r   restarts the kwin shell'
        echo '   -u   restores the default configuration'
        exit_issue 1
}

if [[ ${#} -eq 0 ]]; then
   usage
fi

# Define list of arguments expected in the input
optstring="haru"
let apply=0
let reboot=0
while getopts ${optstring} arg; do
  case "${arg}" in
    h)  usage ;;
    a)  let apply=1
        ;;
        
    r)  let reboot=1
        ;;

    u)  let restore=1
        ;;

    ?)  echo "Invalid option: -${OPTARG}."
        echo
        usage
        ;;
  esac
done

function verify_message(){
  echo You can not restore and apply at the same time.
  exit_issue 3
}
  
if [[ $apply == 1 ]]
then
    if [[ $restore == 1 ]]
    then
      verify_message
    fi
    applychanges
fi

if [[ $restore == 1 ]]
then
    if [[ $apply == 1 ]]
    then
      verify_message
    fi
    restorechanges
fi

if [[ $reboot == 1 ]]
then
    restartshell
fi

